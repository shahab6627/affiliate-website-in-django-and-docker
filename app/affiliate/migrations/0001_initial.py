# Generated by Django 3.2.9 on 2022-12-23 16:31

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=100)),
                ('barnd_logo', models.FileField(upload_to='images/brand_logo')),
                ('parama_link', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, max_length=100, null=True, populate_from='parama_link', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GenderType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat_name', models.CharField(blank=True, max_length=100, null=True)),
                ('cat_image', models.ImageField(blank=True, null=True, upload_to='images/cat_images')),
                ('cat_icon', models.FileField(blank=True, help_text='(select svg file)', null=True, upload_to='images/icons')),
                ('url_text', models.CharField(blank=True, max_length=200, null=True)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, max_length=100, null=True, populate_from='url_text', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product_sub_cat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_cat_name', models.CharField(max_length=100)),
                ('url_text', models.CharField(blank=True, max_length=200, null=True)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, max_length=100, null=True, populate_from='sub_cat_name', unique=True)),
                ('gender_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='affiliate.gendertype')),
                ('main_cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_cat', to='affiliate.productcat')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_title', models.CharField(max_length=200)),
                ('material_type', models.CharField(blank=True, max_length=200, null=True)),
                ('item_weight', models.CharField(blank=True, max_length=200, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=200, null=True)),
                ('product_home_page_image', models.ImageField(help_text='(This Picture Will be displyed on home page', upload_to='images/product_images')),
                ('product_detail_image', models.ImageField(help_text='(This Picture will be displayed on product detail page', upload_to='images/detail_images')),
                ('product_detail_image1', models.ImageField(blank=True, help_text='(This Picture will be displayed on product detail page1', null=True, upload_to='images/detail_images')),
                ('product_detail_image2', models.ImageField(blank=True, help_text='(This Picture will be displayed on product detail page2', null=True, upload_to='images/detail_images')),
                ('product_short_description', models.TextField()),
                ('product_long_description', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('parama_link', models.CharField(max_length=255)),
                ('affiliate_link', models.URLField(blank=True, max_length=128, null=True)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, null=True, populate_from='parama_link', unique=True)),
                ('status', models.CharField(choices=[('peding', 'pending'), ('posted', 'posted')], max_length=100)),
                ('gender_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='affiliate.gendertype')),
                ('product_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='producut_brand', to='affiliate.brand')),
                ('product_main_cat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_main_cat1', to='affiliate.productcat')),
                ('product_sub_cate', smart_selects.db_fields.ChainedManyToManyField(chained_field='product_main_cat', chained_model_field='main_cat', to='affiliate.Product_sub_cat')),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog_title', models.CharField(max_length=200)),
                ('blog_pic', models.ImageField(upload_to='images/blog-pics')),
                ('blog_short_description', models.TextField()),
                ('blog_body', models.TextField()),
                ('parma_link', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='parma_link', unique=True)),
                ('create_at', models.DateField(auto_now_add=True)),
                ('blog_cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='affiliate.productcat')),
            ],
        ),
    ]
